<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lion&#39;s Blog</title>
  
  <subtitle>寻找更优秀的人同行</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sniffer.site/"/>
  <updated>2018-12-18T11:10:34.854Z</updated>
  <id>http://sniffer.site/</id>
  
  <author>
    <name>Lion heart</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android7.0 拨号盘应用源码分析</title>
    <link href="http://sniffer.site/2018/12/15/Android7.0%20%E6%8B%A8%E5%8F%B7%E7%9B%98%E5%BA%94%E7%94%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://sniffer.site/2018/12/15/Android7.0 拨号盘应用源码分析/</id>
    <published>2018-12-15T09:26:12.000Z</published>
    <updated>2018-12-18T11:10:34.854Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>android拨号盘的源码目录在package/app/Dialer</p><p>自7.0以后Incallui的源码直接放到了Dialer目录下，虽然在7.0以前incallui有自己独立的目录，但实际编译过程中只是作为链接库最后还是被编译到Dialer的apk里</p><p>博主这里只取Dialer相关的源码并导入AS中，并稍作调整兼容至L</p><h5 id="源码目录结构如下："><a href="#源码目录结构如下：" class="headerlink" title="源码目录结构如下："></a>源码目录结构如下：</h5><p><img src="FB9D778072D0486D898B64042F8FA8BB" alt="image"></p><p>先理一理各个工程的依赖关系</p><p><strong>com.android.dialer</strong>是主工程依赖于</p><p><strong>com.android.contacts.common</strong>工程和<strong>com.android.phone.common</strong>工程</p><p><strong>com.android.contacts.common</strong>又依赖于</p><p><strong>com.android.phone.common</strong>工程和<strong>com.android.common</strong>工程</p><h4 id="1-1拨号盘概览"><a href="#1-1拨号盘概览" class="headerlink" title="1.1拨号盘概览"></a>1.1拨号盘概览</h4><p>先来看看几张原图<br><img src="673CB837DDAE44A2BF0366E591EB1F8F" alt="image"></p><p><img src="6D9FB9DC04394BFC9678894B1ACE0553" alt="image"></p><h4 id="1-2-DialtactsActivity"><a href="#1-2-DialtactsActivity" class="headerlink" title="1.2 DialtactsActivity"></a>1.2 DialtactsActivity</h4><p><img src="E11E9264D152477196CE74D611687C2C" alt="image"></p><p>主activity为DialtactsActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">com.android.dialer.DialtactsActivity</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DialtactsActivity</span> <span class="keyword">extends</span> <span class="title">TransactionSafeActivity</span> 。。。</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Fragment containing the dialpad that slides into view</span></span><br><span class="line">    <span class="keyword">protected</span> DialpadFragment mDialpadFragment;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">// Fragment for searching phone numbers using the alphanumeric keyboard.</span></span><br><span class="line">    <span class="keyword">private</span> RegularSearchFragment mRegularSearchFragment;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Fragment for searching phone numbers using the dialpad.</span></span><br><span class="line">    <span class="keyword">private</span> SmartDialSearchFragment mSmartDialSearchFragment;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Fragment containing the speed dial list, call history list, and all contacts list.    </span></span><br><span class="line">    <span class="keyword">private</span> ListsFragment mListsFragment;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DialerDatabaseHelper mDialerDatabaseHelper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FloatingActionButtonController mFloatingActionButtonController;</span><br><span class="line"></span><br><span class="line">    ...... ......</span><br><span class="line">    ...... .....</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">om.android.dialer.dialpad .DialpadFragment <span class="comment">// 拨号盘fragment</span></span><br><span class="line"></span><br><span class="line">com.android.dialer.list.RegularSearchFragment <span class="comment">// 联系人搜索fragment</span></span><br><span class="line"></span><br><span class="line">com.android.dialer.list.SmartDialSearchFragment <span class="comment">// 拨号搜索fragment</span></span><br><span class="line"></span><br><span class="line">com.android.dialer.list.ListsFragment <span class="comment">// TAB页fragment，包含快速联系人，最近通话记录，联系人列表三个子fragment</span></span><br><span class="line"></span><br><span class="line">com.android.dialer.database.DialerDatabaseHelper <span class="comment">// 拨号搜索数据库SQLiteOpenHelper对象</span></span><br><span class="line"></span><br><span class="line">com.android.contacts.common.widget.FloatingActionButtonController <span class="comment">// 悬浮按钮控制器</span></span><br></pre></td></tr></table></figure><p>再看看onCreate里的主要实现（部分内容省略）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">    setContentView(R.layout.dialtacts_activity);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> ActionBar actionBar = getSupportActionBar();</span><br><span class="line">    actionBar.setCustomView(R.layout.search_edittext);</span><br><span class="line">    <span class="comment">// 给actionbar设置自定义view （SearchEditTextLayout）</span></span><br><span class="line">    SearchEditTextLayout searchEditTextLayout = (SearchEditTextLayout) actionBar</span><br><span class="line">    .getCustomView().findViewById(R.id.search_view_container);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给SearchEditTextLayout添加管理器ActionBarController</span></span><br><span class="line">    mActionBarController = <span class="keyword">new</span> ActionBarController(<span class="keyword">this</span>, searchEditTextLayout);</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">final</span> View floatingActionButtonContainer = findViewById(</span><br><span class="line">            R.id.floating_action_button_container);</span><br><span class="line">  ImageButton floatingActionButton = (ImageButton) findViewById(R.id.floating_action_button);</span><br><span class="line">  floatingActionButton.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">   <span class="comment">// 用FloatingActionButtonController管理悬浮按钮</span></span><br><span class="line">  mFloatingActionButtonController = <span class="keyword">new</span> FloatingActionButtonController(<span class="keyword">this</span>,</span><br><span class="line">     floatingActionButtonContainer, floatingActionButton);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 添加ListsFragment</span></span><br><span class="line">    getFragmentManager().beginTransaction()</span><br><span class="line">        .add(R.id.dialtacts_frame, <span class="keyword">new</span> ListsFragment(), TAG_FAVORITES_FRAGMENT)</span><br><span class="line">        .commit();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化单例对象DialerDatabaseHelper</span></span><br><span class="line">   mDialerDatabaseHelper = DatabaseHelperManager.getDatabaseHelper(<span class="keyword">this</span>);</span><br><span class="line">  SmartDialPrefix.initializeNanpSettings(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-ListsFragment"><a href="#1-3-ListsFragment" class="headerlink" title="1.3 ListsFragment"></a>1.3 ListsFragment</h4><p>ListsFragment是主fragment，结构如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListsFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> ViewPager mViewPager;</span><br><span class="line">    <span class="keyword">private</span> ViewPagerTabs mViewPagerTabs;  </span><br><span class="line">    <span class="comment">// 自定义TAB标签，继承自HorizontalScrollView</span></span><br><span class="line">    <span class="keyword">private</span> ViewPagerAdapter mViewPagerAdapter;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拖拽常用联系人时悬浮视图</span></span><br><span class="line">    <span class="keyword">private</span> RemoveView mRemoveView;</span><br><span class="line">    <span class="keyword">private</span> View mRemoveViewContent;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 常用联系人fragment</span></span><br><span class="line">    <span class="keyword">private</span> SpeedDialFragment mSpeedDialFragment;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最近通话记录fragment</span></span><br><span class="line">    <span class="keyword">private</span> CallLogFragment mHistoryFragment;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 联系人列表fragment</span></span><br><span class="line">    <span class="keyword">private</span> AllContactsFragment mAllContactsFragment;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Voicemail列表fragment</span></span><br><span class="line">    <span class="keyword">private</span> CallLogFragment mVoicemailFragment;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span></span><br><span class="line"><span class="function"><span class="params">            Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">        <span class="keyword">final</span> View parentView = inflater.inflate(R.layout.lists_fragment, container, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        mViewPager = (ViewPager) parentView.findViewById(R.id.lists_pager);</span><br><span class="line">        mViewPagerAdapter = <span class="keyword">new</span> ViewPagerAdapter(getChildFragmentManager());</span><br><span class="line">        mViewPager.setAdapter(mViewPagerAdapter);</span><br><span class="line">        mViewPager.setOffscreenPageLimit(TAB_COUNT_WITH_VOICEMAIL - <span class="number">1</span>);</span><br><span class="line">        mViewPager.setOnPageChangeListener(<span class="keyword">this</span>);</span><br><span class="line">        showTab(TAB_INDEX_SPEED_DIAL);</span><br><span class="line"></span><br><span class="line">        ...... ......  ...... ......</span><br><span class="line"></span><br><span class="line">        mViewPagerTabs = (ViewPagerTabs) parentView.findViewById(R.id.lists_pager_header);</span><br><span class="line">        mViewPagerTabs.configureTabIcons(mTabIcons);</span><br><span class="line">        mViewPagerTabs.setViewPager(mViewPager);</span><br><span class="line">        addOnPageChangeListener(mViewPagerTabs);</span><br><span class="line"></span><br><span class="line">        mRemoveView = (RemoveView) parentView.findViewById(R.id.remove_view);</span><br><span class="line">        mRemoveViewContent = parentView.findViewById(R.id.remove_view_content);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> parentView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ListsFragment最多可以显示四个fragment，有个VisualVoicemailCallLogFragment显示一种特定的通话记录（提供视频语音邮件服务）</p><p>类型为Calls.VOICEMAIL_TYPE，需要运营商支持，只有存在该类通话记录才会显示该TAB页，国内运营商暂不支持</p><p><img src="15D223D8DAF4439B85EEA207E1D66170" alt="image">‘</p><p>SpeedDialFragment显示常用联系人列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpeedDialFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> ...</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示数据的GridView列表</span></span><br><span class="line">    <span class="keyword">private</span> PhoneFavoriteListView mListView;    </span><br><span class="line"></span><br><span class="line">   <span class="comment">// 源数据BaseAdapter</span></span><br><span class="line">    <span class="keyword">private</span> PhoneFavoritesTileAdapter mContactTileAdapter;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 查询源数据的LoaderCallbacks</span></span><br><span class="line">  <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ContactTileLoaderListener</span> <span class="keyword">implements</span> <span class="title">LoaderManager</span>.<span class="title">LoaderCallbacks</span>&lt;<span class="title">Cursor</span>&gt; </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> CursorLoader <span class="title">onCreateLoader</span><span class="params">(<span class="keyword">int</span> id, Bundle args)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"ContactTileLoaderListener#onCreateLoader."</span>);</span><br><span class="line">            <span class="keyword">return</span> ContactTileLoaderFactory.createStrequentPhoneOnlyLoader(getActivity());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLoadFinished</span><span class="params">(Loader&lt;Cursor&gt; loader, Cursor data)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"ContactTileLoaderListener#onLoadFinished"</span>);</span><br><span class="line">            mContactTileAdapter.setContactCursor(data);</span><br><span class="line">            setEmptyViewVisibility(mContactTileAdapter.getCount() == <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLoaderReset</span><span class="params">(Loader&lt;Cursor&gt; loader)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"ContactTileLoaderListener#onLoaderReset. "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用LoadManager方式获取cursor数据，查询ContactsProvider数据库的data表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">com.android.contacts.common.ContactTileLoaderFactory</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CursorLoader <span class="title">createStrequentPhoneOnlyLoader</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">     Uri uri = Contacts.CONTENT_STREQUENT_URI.buildUpon()</span><br><span class="line">          .appendQueryParameter(ContactsContract.STREQUENT_PHONE_ONLY, <span class="string">"true"</span>).build();</span><br><span class="line"></span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> CursorLoader(context, uri, COLUMNS_PHONE_ONLY, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据来源包括收藏的联系人以及有通话记录的联系人</p><h4 id="1-4-DialpadFragment"><a href="#1-4-DialpadFragment" class="headerlink" title="1.4 DialpadFragment"></a>1.4 DialpadFragment</h4><p>DialpadFragment显示拨号盘fragment</p><p>在DialtactsActivity中添加如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showDialpadFragment</span><span class="params">(<span class="keyword">boolean</span> animate)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mDialpadFragment == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mDialpadFragment = <span class="keyword">new</span> DialpadFragment();</span><br><span class="line">            ft.add(R.id.dialtacts_container, mDialpadFragment, TAG_DIALPAD_FRAGMENT);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ft.show(mDialpadFragment);</span><br><span class="line">        &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>第一次显示时动态添加进去，后续动态控制显示隐藏</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DialpadFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">private</span> DialpadView mDialpadView; <span class="comment">// 拨号数字面板（包括输入号码框）</span></span><br><span class="line">  <span class="keyword">private</span> EditText mDigits;          <span class="comment">// 输入号码框</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> ToneGenerator mToneGenerator; <span class="comment">// DTMF音播放器</span></span><br><span class="line">  <span class="keyword">private</span> ListView mDialpadChooser;     <span class="comment">// 通话状态时显示的视图</span></span><br><span class="line">  <span class="keyword">private</span> DialpadChooserAdapter mDialpadChooserAdapter;</span><br><span class="line">  <span class="comment">// 通话状态时显示的视图adapter</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedState)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 横竖屏加载不同的布局</span></span><br><span class="line">        <span class="keyword">final</span> View fragmentView = inflater.inflate(R.layout.dialpad_fragment, container,</span><br><span class="line">                <span class="keyword">false</span>);</span><br><span class="line">        fragmentView.buildLayer();</span><br><span class="line"></span><br><span class="line">        mDialpadView = (DialpadView) fragmentView.findViewById(R.id.dialpad_view);</span><br><span class="line">        mDialpadView.setCanDigitsBeEdited(<span class="keyword">true</span>);</span><br><span class="line">        mDigits = mDialpadView.getDigits();</span><br><span class="line">        ...... ........... ......</span><br><span class="line">        PhoneNumberFormatter.setPhoneNumberFormattingTextWatcher(getActivity(), mDigits);  <span class="comment">// 格式化输入框中的号码</span></span><br><span class="line">        <span class="comment">// Check for the presence of the keypad</span></span><br><span class="line">        View oneButton = fragmentView.findViewById(R.id.one);</span><br><span class="line">        <span class="keyword">if</span> (oneButton != <span class="keyword">null</span>) &#123;  <span class="comment">// 绑定各个数字按键onPress事件</span></span><br><span class="line">            configureKeypadListeners(fragmentView);</span><br><span class="line">        &#125;</span><br><span class="line">       ...... ............ ......</span><br><span class="line">        mDialpadChooser = (ListView) fragmentView.findViewById(R.id.dialpadChooser);</span><br><span class="line">        mDialpadChooser.setOnItemClickListener(<span class="keyword">this</span>);</span><br><span class="line">        ...... ..... ...... ......</span><br><span class="line">        <span class="keyword">return</span> fragmentView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>横屏和竖屏所加载的拨号面板布局是不一样的</p><p><img src="C2B30B7AF67E499FA430A708835E3CFC" alt="image"></p><p>DialpadView是个自定义视图，主要用于显示数字按键和输入号码框</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DialpadView</span> <span class="keyword">extends</span> <span class="title">LinearLayout</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EditText mDigits;     <span class="comment">// 输入号码框</span></span><br><span class="line">    <span class="keyword">private</span> ImageButton mDelete; <span class="comment">// 删除按钮</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupKeypad</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ...... ............ ......</span><br><span class="line">        DialpadKeyButton dialpadKey;</span><br><span class="line">        TextView numberView;</span><br><span class="line">        TextView lettersView;</span><br><span class="line">         ...... ............ ......</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mButtonIds.length; i++) &#123;</span><br><span class="line">            dialpadKey = (DialpadKeyButton) findViewById(mButtonIds[i]);</span><br><span class="line">            numberView = (TextView) dialpadKey.findViewById(R.id.dialpad_key_number);</span><br><span class="line">            lettersView = (TextView) dialpadKey.findViewById(R.id.dialpad_key_letters);</span><br><span class="line">          ...... ............ ......</span><br><span class="line">            <span class="keyword">final</span> RippleDrawable rippleBackground = (RippleDrawable)</span><br><span class="line">                    getDrawableCompat(getContext(), R.drawable.btn_dialpad_key);</span><br><span class="line">            <span class="keyword">if</span> (mRippleColor != <span class="keyword">null</span>) &#123;</span><br><span class="line">                rippleBackground.setColor(mRippleColor);            &#125;</span><br><span class="line"></span><br><span class="line">            numberView.setText(numberString);</span><br><span class="line">            numberView.setElegantTextHeight(<span class="keyword">false</span>);</span><br><span class="line">            dialpadKey.setContentDescription(numberContentDescription);</span><br><span class="line">            dialpadKey.setBackground(rippleBackground); <span class="comment">// 设置数字按键水波纹背景色</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (lettersView != <span class="keyword">null</span>) &#123;</span><br><span class="line">                lettersView.setText(resources.getString(letterIds[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         ...... ............ ......</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">animateShow</span><span class="params">()</span> </span>&#123;  <span class="comment">// 显示拨号面板时各个数字按键的动画效果</span></span><br><span class="line">            ...... ............ ......</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mButtonIds.length; i++) &#123;</span><br><span class="line">             ...... ............ ......</span><br><span class="line">            ViewPropertyAnimator animator = dialpadKey.animate();</span><br><span class="line">            <span class="keyword">if</span> (mIsLandscape) &#123;</span><br><span class="line">                <span class="comment">// Landscape orientation requires translation along the X axis.</span></span><br><span class="line">                <span class="comment">// For RTL locales, ensure we translate negative on the X axis.</span></span><br><span class="line">                dialpadKey.setTranslationX((mIsRtl ? -<span class="number">1</span> : <span class="number">1</span>) * mTranslateDistance);</span><br><span class="line">                animator.translationX(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Portrait orientation requires translation along the Y axis.</span></span><br><span class="line">                dialpadKey.setTranslationY(mTranslateDistance);</span><br><span class="line">                animator.translationY(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            animator.setInterpolator(AnimUtils.EASE_OUT_EASE_IN)</span><br><span class="line">                    .setStartDelay(delay)</span><br><span class="line">                    .setDuration(duration)</span><br><span class="line">                    .setListener(showListener)</span><br><span class="line">                    .start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当处于通话状态时显示如下</p><p><img src="32CACB6651F6463FBF729C1B1572FB64" alt="image"></p><h4 id="1-5SmartDialSearchFragment-RegularSearchFragment"><a href="#1-5SmartDialSearchFragment-RegularSearchFragment" class="headerlink" title="1.5SmartDialSearchFragment RegularSearchFragment"></a>1.5SmartDialSearchFragment RegularSearchFragment</h4><p>SmartDialSearchFragment显示拨号搜索结果fragment（在拨号面板输入数字时显示）</p><p>RegularSearchFragment显示联系人搜索结果fragment（在actionbar输入框输入字符时显示）</p><p>在DialtactsActivity中进入或退出搜索模式时动态添加移除</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">enterSearchUi</span><span class="params">(<span class="keyword">boolean</span> smartDialSearch, String query, <span class="keyword">boolean</span> animate)</span> </span>&#123;</span><br><span class="line">         ...... ............ ......</span><br><span class="line">        <span class="keyword">if</span> (fragment == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (smartDialSearch) &#123;</span><br><span class="line">                fragment = <span class="keyword">new</span> SmartDialSearchFragment();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                fragment = ObjectFactory.newRegularSearchFragment();</span><br><span class="line">                  ...... ............ ......</span><br><span class="line">            &#125;</span><br><span class="line">            transaction.add(R.id.dialtacts_frame, fragment, tag);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            transaction.show(fragment);</span><br><span class="line">        &#125;</span><br><span class="line">         ...... ............ ......</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exitSearchUi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         ...... ............ ......</span><br><span class="line">        <span class="keyword">final</span> FragmentTransaction transaction = getFragmentManager().beginTransaction();</span><br><span class="line">        <span class="keyword">if</span> (mSmartDialSearchFragment != <span class="keyword">null</span>) &#123;</span><br><span class="line">            transaction.remove(mSmartDialSearchFragment);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mRegularSearchFragment != <span class="keyword">null</span>) &#123;</span><br><span class="line">            transaction.remove(mRegularSearchFragment);</span><br><span class="line">        &#125;</span><br><span class="line">        transaction.commit();</span><br><span class="line"></span><br><span class="line">        mListsFragment.getView().animate().alpha(<span class="number">1</span>).withLayer();</span><br><span class="line">         ...... ............ ......</span><br><span class="line">        mActionBarController.onSearchUiExited();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="2AF107E2F071468C94676CCA08387D15" alt="image"></p><p>拨号搜素只能通过拨号面板的输入数字，支持T9搜索，但是原生不支持拼音检索</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SmartDialSearchFragment</span> <span class="keyword">extends</span> <span class="title">SearchFragment</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> ContactEntryListAdapter <span class="title">createListAdapter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SmartDialNumberListAdapter adapter = </span><br><span class="line">            <span class="keyword">new</span> SmartDialNumberListAdapter(getActivity());</span><br><span class="line">        adapter.setUseCallableUri(<span class="keyword">super</span>.usesCallableUri());</span><br><span class="line">        adapter.setQuickContactEnabled(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// Set adapter's query string to restore previous instance state.</span></span><br><span class="line">        adapter.setQueryString(getQueryString());</span><br><span class="line">        adapter.setListener(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">return</span> adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Loader&lt;Cursor&gt; <span class="title">onCreateLoader</span><span class="params">(<span class="keyword">int</span> id, Bundle args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Smart dialing does not support Directory Load, falls back to normal search instead.</span></span><br><span class="line">        <span class="keyword">if</span> (id == getDirectoryLoaderId()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.onCreateLoader(id, args);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> SmartDialNumberListAdapter adapter = </span><br><span class="line">                 (SmartDialNumberListAdapter) getAdapter();</span><br><span class="line">            SmartDialCursorLoader loader = <span class="keyword">new</span> SmartDialCursorLoader(<span class="keyword">super</span>.getContext());</span><br><span class="line">            adapter.configureLoader(loader);</span><br><span class="line">            <span class="keyword">return</span> loader;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="7966A3D3619441619A695B08E2734384" alt="image"></p><p>联系人搜索则通过软键盘输入，不过不支持T9搜索</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegularSearchFragment</span> <span class="keyword">extends</span> <span class="title">SearchFragment</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> ContactEntryListAdapter <span class="title">createListAdapter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RegularSearchListAdapter adapter = <span class="keyword">new</span> RegularSearchListAdapter(getActivity());</span><br><span class="line">        adapter.setDisplayPhotos(<span class="keyword">true</span>);</span><br><span class="line">        adapter.setUseCallableUri(usesCallableUri());</span><br><span class="line">        adapter.setListener(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">return</span> adapter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从类关系图上可以得知两个fragment和对应的adapter都继承于同一个父类，最终都派生自ContactsCommon工程里的模板类ContactEntryListFragment</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ContactEntryListFragment</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">ContactEntryListAdapter</span>&gt;</span></span><br><span class="line"><span class="class">        <span class="keyword">extends</span> <span class="title">Fragment</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> T mAdapter;          <span class="comment">// 模板adapter</span></span><br><span class="line">    <span class="keyword">private</span> View mView;</span><br><span class="line">    <span class="keyword">private</span> ListView mListView;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ContactPhotoManager mPhotoManager;  <span class="comment">// 头像管理</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> View <span class="title">inflateView</span><span class="params">(LayoutInflater inflater, ViewGroup container)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> T <span class="title">createListAdapter</span><span class="params">()</span></span>;        <span class="comment">// 子类中实现具体adapter</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>   <span class="comment">// 子类可重写获取数据的Loader</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Loader&lt;Cursor&gt; <span class="title">onCreateLoader</span><span class="params">(<span class="keyword">int</span> id, Bundle args)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (id == DIRECTORY_LOADER_ID) &#123;</span><br><span class="line">            DirectoryListLoader loader = <span class="keyword">new</span> DirectoryListLoader(mContext);</span><br><span class="line">            loader.setDirectorySearchMode(mAdapter.getDirectorySearchMode());</span><br><span class="line">            loader.setLocalInvisibleDirectoryEnabled(</span><br><span class="line">                    ContactEntryListAdapter.LOCAL_INVISIBLE_DIRECTORY_ENABLED);</span><br><span class="line">            <span class="keyword">return</span> loader;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            CursorLoader loader = createCursorLoader(mContext);</span><br><span class="line">            <span class="keyword">long</span> directoryId = args != <span class="keyword">null</span> &amp;&amp; args.containsKey(DIRECTORY_ID_ARG_KEY)</span><br><span class="line">                    ? args.getLong(DIRECTORY_ID_ARG_KEY)</span><br><span class="line">                    : Directory.DEFAULT;</span><br><span class="line">            mAdapter.configureLoader(loader, directoryId);</span><br><span class="line">            <span class="keyword">return</span> loader;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ContactEntryListFragment内部封装了很多操作，绑定了ContactEntryListAdapter，具体细节就不在这里详述了</p><h4 id="1-6小结"><a href="#1-6小结" class="headerlink" title="1.6小结"></a>1.6小结</h4><p>最后附上Dialer里主要类图<br><img src="CE01A21D5F3F474C872516C3169B48C8" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;android拨号盘的源码目录在package/app/Dialer&lt;/p&gt;
&lt;p&gt;自7.0以后Incallui的源码直接放到了Dialer
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://sniffer.site/2018/12/15/hello-world/"/>
    <id>http://sniffer.site/2018/12/15/hello-world/</id>
    <published>2018-12-15T06:34:16.915Z</published>
    <updated>2018-12-15T06:34:16.915Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
